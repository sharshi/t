{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"posts/","title":"Posts","text":""},{"location":"posts/2025/01/19/odata-with-custom-endpoints/","title":"Odata with custom endpoints","text":"sfardashkenaz <p><p>hi</p></p> <p><p>helloi</p></p>"},{"location":"posts/2025/03/04/structured-logs-dotnet/","title":"Structured Logs in .NET","text":"<p>with regular string interpolation, if you want to find all the logs where AccountId == 244 you have to hope the logs are in a very specific format and you need to search for ('accountid: 244', 'account id = 244', 'accountid = 244' etc...).</p> <p>With structured logs it breaks out those variables into a structured system that recognizes those variables (like {AccountId}) and extracts them into an easily filterable format.</p> <p>For example:</p> <p>In the <code>RCMBackgroundService</code> there is a log: <code>_logger.LogInformation(\"Excecuting {ClassName}\", className);</code></p> <p>You can find any log, logged with the Variable <code>ClassName</code> like this: <pre><code>traces\n| where customDimensions.OriginalFormat == \"{ClassName}\"\n</code></pre> And specific ones like this: <pre><code>traces\n| where customDimensions.ClassName == \"TaskUpdateNotificationService\"\n</code></pre></p>"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/siddur/","title":"Siddur","text":""},{"location":"projects/tidy-albatross/","title":"Tidy Alabtross","text":""},{"location":"projects/webhunt/","title":"WebHunt","text":""},{"location":"posts/archive/2025/","title":"2025","text":""},{"location":"posts/category/dotnet/","title":"dotnet","text":""}]}