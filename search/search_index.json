{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"posts/","title":"Posts","text":""},{"location":"posts/2025/01/19/odata-with-custom-endpoints/","title":"Odata with custom endpoints","text":"<p>=== \"sfard\"</p> <pre><code>&lt;p&gt;hi&lt;/p&gt;\n</code></pre> <p>=== \"ashkenaz\"</p> <pre><code>&lt;p&gt;helloi&lt;/p&gt;\n</code></pre>"},{"location":"posts/2025/03/04/structured-logs/","title":"Structured Logs in .NET","text":"<p>with regular string interpolation, if you want to find all the logs where AccountId == 244 you have to hope the logs are in a very specific format and you need to search for ('accountid: 244', 'account id = 244', 'accountid = 244' etc...).</p> <p>With structured logs it breaks out those variables into a structured system that recognizes those variables (like {AccountId}) and extracts them into an easily filterable format.</p> <p>For example:</p> <p>In the <code>RCMBackgroundService</code> there is a log: <code>_logger.LogInformation(\"Excecuting {ClassName}\", className);</code></p> <p>You can find any log, logged with the Variable <code>ClassName</code> like this:</p> <pre><code>traces\n| where customDimensions.OriginalFormat == \"{ClassName}\"\n</code></pre> <p>And specific ones like this:</p> <pre><code>traces\n| where customDimensions.ClassName == \"TaskUpdateNotificationService\"\n</code></pre>"},{"location":"posts/archive/2025/","title":"2025","text":""},{"location":"posts/category/dotnet/","title":"dotnet","text":""}]}